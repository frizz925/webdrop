name: Upload new release

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "develop" ]

jobs:
  build_web:
    name: Build web
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Install and build static web
      working-directory: ./web
      run: pnpm install && pnpm run build

    - name: Upload static web
      uses: actions/upload-artifact@v4
      with:
        name: static-web
        path: web/build

  build_server:
    name: Build server ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        include:
        - os: ubuntu-latest
          artifact: webdrop-linux-amd64
        - os: windows-latest
          artifact: webdrop-windows-amd64
        - os: macos-latest
          artifact: webdrop-macos-arm64
        - os: macos-13
          artifact: webdrop-macos-amd64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build -r

    - name: Upload release artifact (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: target/release/${{ matrix.binary }}.exe

    - name: Upload release artifact
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: target/release/${{ matrix.binary }}

  release:
    name: Release
    needs: 
    - build_web
    - build_server
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        platform: [linux, windows, macos]
        include:
        - platform: linux
          artifact: webdrop-linux-amd64
          archive: webdrop-linux-amd64.tar.gz
        - platform: windows
          artifact: webdrop-windows-amd64
          archive: webdrop-windows-amd64.zip
        - platform: macos
          artifact: webdrop-macos-arm64
          archive: webdrop-macos-arm64.zip
        - platform: macos
          artifact: webdrop-macos-amd64
          archive: webdrop-macos-amd64.zip

    steps:
    - name: Create web directories
      run: mkdir -p web/build

    - name: Download web artifact
      uses: actions/download-artifact@v4
      with:
        name: static-web
        path: web/build

    - name: Download server artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.artifact }}

    - name: Create archive (Linux)
      if: matrix.platform == 'linux'
      run: tar -cvzf ${{ matrix.archive }} webdrop web

    - name: Create archive (Windows)
      if: matrix.platform == 'windows'
      run: zip -rv ${{ matrix.archive }} webdrop.exe web

    - name: Create archive (macOS)
      if: matrix.platform == 'macos'
      run: zip -rv ${{ matrix.archive }} webdrop web
    
    - name: Upload release
      uses: softprops/action-gh-release@v2
      with:
        name: 'v0.1.0'
        tag_name: 'v0.1.0'
        make_latest: true
        files: ${{ matrix.archive }}