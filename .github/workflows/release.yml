name: Upload new release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_web:
    name: Build web
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Install and build static web
      working-directory: ./web
      run: pnpm install && pnpm run build

    - name: Upload static web
      uses: actions/upload-artifact@v4
      with:
        name: static-web
        path: web/build

  build_server:
    name: Build server ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        include:
        - os: ubuntu-latest
          artifact: webdrop-linux-amd64
        - os: windows-latest
          artifact: webdrop-windows-amd64
        - os: macos-latest
          artifact: webdrop-macos-arm64
        - os: macos-13
          artifact: webdrop-macos-amd64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build -r

    - name: Upload release artifact (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: target/release/webdrop.exe

    - name: Upload release artifact
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: target/release/webdrop

  release:
    name: Release ${{ matrix.arch }}
    needs: 
    - build_web
    - build_server
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        arch: 
          - linux-amd64
          - windows-amd64
          - macos-arm64
          - macos-amd64
        include:
        - arch: linux-amd64
          platform: linux
        - arch: windows-amd64
          platform: windows
        - arch: macos-arm64
          platform: macos
        - arch: macos-amd64
          platform: macos

    steps:
    - name: Create web directories
      run: mkdir -p webdrop/web/build

    - name: Download web artifact
      uses: actions/download-artifact@v4
      with:
        name: static-web
        path: webdrop/web/build

    - name: Download server artifact
      uses: actions/download-artifact@v4
      with:
        name: webdrop-${{ matrix.arch }}
        path: webdrop

    - name: Create archive (Linux)
      if: matrix.platform == 'linux'
      run: |
        export ARCHIVE=webdrop-${{ github.ref_name }}-${{ matrix.arch }}.tar.gz
        chmod +x webdrop/webdrop
        tar -cvzf $ARCHIVE webdrop
        echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

    - name: Create archive (Windows)
      if: matrix.platform == 'windows'
      run: |
        export ARCHIVE=webdrop-${{ github.ref_name }}-${{ matrix.arch }}.zip
        zip -rv $ARCHIVE webdrop
        echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

    - name: Create archive (macOS)
      if: matrix.platform == 'macos'
      run: |
        export ARCHIVE=webdrop-${{ github.ref_name }}-${{ matrix.arch }}.zip
        chmod +x webdrop/webdrop
        zip -rv $ARCHIVE webdrop
        echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV
    
    - name: Upload release
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ARCHIVE }}
    
    - name: List all files in the directory
      if: github.ref_type != 'tag'
      run: ls -R
